blueprint:
  name: Office Fan W100 Smart Control
  description: v0.3 - Complete PID-controlled fan with W100 remote integration (Includes temperature sensor workaround for accurate heating)
  domain: automation
  input:
    w100_device_name:
      name: W100 Device Name
      description: EXACT case-sensitive name of your W100 device as it appears in Zigbee2MQTT (e.g., "Tempcontrol00" with capital T, not "tempcontrol00")
      selector:
        text:
      default: "Tempcontrol00"
    
    heat_mode_boolean:
      name: Heat Mode Boolean
      description: Input boolean that controls heating mode
      selector:
        entity:
          domain: input_boolean
    
    fan_climate_entity:
      name: Fan Climate Entity
      description: The actual fan/heater climate entity
      selector:
        entity:
          domain: climate
    
    fan_warm_level_entity:
      name: Fan Warm Level Entity
      description: The select entity that controls heating levels
      selector:
        entity:
          domain: select
    
    smart_thermostat_entity:
      name: Smart Thermostat Entity
      description: The smart_thermostat PID controller entity
      selector:
        entity:
          domain: climate
    
    humidity_sensor:
      name: Humidity Sensor
      description: Primary humidity sensor for W100 display
      selector:
        entity:
          domain: sensor
          device_class: humidity
    
    backup_humidity_sensor:
      name: Backup Humidity Sensor (Optional)
      description: Backup humidity sensor for initialization
      selector:
        entity:
          domain: sensor
          device_class: humidity
      default: ""
    
    heating_temperature:
      name: Heating Temperature
      description: Temperature to set when actively heating
      selector:
        number:
          min: 15
          max: 35
          unit_of_measurement: "°C"
      default: 30
    
    idle_temperature:
      name: Idle Temperature
      description: Temperature to set when maintaining (idle)
      selector:
        number:
          min: 15
          max: 35
          unit_of_measurement: "°C"
      default: 22
    
    heating_warm_level:
      name: Heating Warm Level
      description: Warm level when actively heating
      selector:
        select:
          options:
            - "1\""
            - "2"
            - "3"
            - "4"
      default: "4"
    
    idle_warm_level:
      name: Idle Warm Level
      description: Warm level when maintaining temperature
      selector:
        select:
          options:
            - "1\""
            - "2"
            - "3"
            - "4"
      default: "1\""
    
    idle_fan_speed:
      name: Idle Fan Speed
      description: Fan speed (1-9) when smart thermostat is idle or off
      selector:
        select:
          options:
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
            - "6"
            - "7"
            - "8"
            - "9"
      default: "3"
    
    swing_mode:
      name: Swing Mode
      description: Oscillation mode for the fan
      selector:
        select:
          options:
            - "horizontal"
            - "vertical"
            - "both"
            - "off"
      default: "horizontal"

trigger_variables:
  w100_name: !input w100_device_name

variables:
  fan_entity: !input fan_climate_entity
  warm_level_entity: !input fan_warm_level_entity
  smart_entity: !input smart_thermostat_entity
  humidity_entity: !input humidity_sensor
  backup_humidity_entity: !input backup_humidity_sensor
  idle_fan_speed: !input idle_fan_speed
  idle_warm_level: !input idle_warm_level
  heating_temp: !input heating_temperature

alias: "{{ w100_name }} Fan Control"
description: "PID-controlled fan with {{ w100_name }} remote integration"
mode: parallel
max: 8
max_exceeded: warning

trigger:
  # Office fan heat mode trigger
  - platform: state
    entity_id: !input heat_mode_boolean
    id: office_fan_heat_mode
  # Smart thermostat state trigger
  - platform: state
    entity_id: !input smart_thermostat_entity
    id: smart_thermostat_state
    to:
      - "idle"
      - "off"
  # Smart thermostat hvac_action trigger
  - platform: state
    entity_id: !input smart_thermostat_entity
    attribute: hvac_action
    id: smart_thermostat_state
    to: "idle"
  # W100 button triggers
  - platform: mqtt
    topic: zigbee2mqtt/{{ w100_name }}/action
    payload: double_center
    id: w100_toggle
  - platform: mqtt
    topic: zigbee2mqtt/{{ w100_name }}/action
    payload: single_plus
    id: w100_plus
  - platform: mqtt
    topic: zigbee2mqtt/{{ w100_name }}/action
    payload: double_plus
    id: w100_plus
  - platform: mqtt
    topic: zigbee2mqtt/{{ w100_name }}/action
    payload: single_minus
    id: w100_minus
  - platform: mqtt
    topic: zigbee2mqtt/{{ w100_name }}/action
    payload: double_minus
    id: w100_minus
  # W100 sync triggers
  - platform: state
    entity_id: !input smart_thermostat_entity
    attribute: temperature
    id: w100_sync
  - platform: state
    entity_id: !input smart_thermostat_entity
    id: w100_sync
  - platform: state
    entity_id: !input smart_thermostat_entity
    attribute: current_temperature
    id: w100_sync
  - platform: state
    entity_id: !input fan_climate_entity
    attribute: fan_mode
    id: w100_sync
  - platform: time_pattern
    minutes: '*'
    seconds: '/5'
    id: w100_sync
  # W100 startup trigger
  - platform: homeassistant
    event: start
    id: w100_init
  # W100 humidity sync trigger
  - platform: state
    entity_id: !input humidity_sensor
    id: w100_humidity
  - platform: time_pattern
    minutes: '/2'
    seconds: '0'
    id: w100_humidity
  # Fan temperature monitor for stuck heater workaround
  - platform: state
    entity_id: !input fan_climate_entity
    attribute: current_temperature
    id: fan_temp_monitor
  - platform: time_pattern
    minutes: '/1'
    seconds: '30'
    id: fan_temp_monitor

condition: []

action:
  - choose:
      # Office Fan Heat Mode On
      - conditions:
          - condition: trigger
            id: office_fan_heat_mode
          - condition: state
            entity_id: !input heat_mode_boolean
            state: "on"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              hvac_mode: heat
          - service: climate.set_temperature
            target:
              entity_id: !input fan_climate_entity
            data:
              temperature: !input heating_temperature
          - service: select.select_option
            target:
              entity_id: !input fan_warm_level_entity
            data:
              option: !input heating_warm_level
          - service: climate.set_swing_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              swing_mode: !input swing_mode
      
      # Office Fan Heat Mode Off
      - conditions:
          - condition: trigger
            id: office_fan_heat_mode
          - condition: state
            entity_id: !input heat_mode_boolean
            state: "off"
        sequence:
          - service: system_log.write
            data:
              message: >
                Blueprint Debug: Heat mode turned OFF. Setting fan to idle speed: {{ idle_fan_speed }}
              level: warning
          - service: climate.set_hvac_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              hvac_mode: fan_only
          - service: climate.set_fan_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              fan_mode: !input idle_fan_speed
          - service: climate.set_temperature
            target:
              entity_id: !input fan_climate_entity
            data:
              temperature: !input idle_temperature
          - service: select.select_option
            target:
              entity_id: !input fan_warm_level_entity
            data:
              option: !input idle_warm_level
          - service: climate.set_swing_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              swing_mode: !input swing_mode

      # Smart Thermostat Idle/Off - Switch to Fan Only
      - conditions:
          - condition: trigger
            id: smart_thermostat_state
          - condition: or
            conditions:
              - condition: state
                entity_id: !input smart_thermostat_entity
                state: "off"
              - condition: and
                conditions:
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    state: "idle"
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    attribute: hvac_action
                    state: "idle"
        sequence:
          # Debug: Log what we're about to do
          - service: system_log.write
            data:
              message: >
                Blueprint Debug: Smart thermostat went to {{ trigger.to_state.state }}.
                Setting fan to idle mode with speed: {{ idle_fan_speed }}
              level: warning
          - service: climate.set_hvac_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              hvac_mode: fan_only
          - delay:
              milliseconds: 1000
          - service: climate.set_fan_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              fan_mode: !input idle_fan_speed
          - delay:
              milliseconds: 500
          - service: select.select_option
            target:
              entity_id: !input fan_warm_level_entity
            data:
              option: !input idle_warm_level
          - service: climate.set_temperature
            target:
              entity_id: !input fan_climate_entity
            data:
              temperature: !input idle_temperature
          - service: climate.set_swing_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              swing_mode: !input swing_mode
          # Force another fan mode set after all other settings
          - delay:
              milliseconds: 500
          - service: climate.set_fan_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              fan_mode: !input idle_fan_speed
          # Debug: Log what actually happened
          - service: system_log.write
            data:
              message: >
                Blueprint Debug: After setting - HVAC mode: {{ states(fan_entity) }}, 
                Fan mode: {{ state_attr(fan_entity, 'fan_mode') }},
                Smart thermostat state: {{ states(smart_entity) }}
              level: warning

      # W100 Toggle Heat/Fan Mode
      - conditions:
          - condition: trigger
            id: w100_toggle
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    state: cool
                sequence:
                  - service: climate.set_hvac_mode
                    target:
                      entity_id: !input smart_thermostat_entity
                    data:
                      hvac_mode: heat
                  - service: select.select_option
                    target:
                      entity_id: "select.{{ w100_name }}_sensor"
                    data:
                      option: external
            default:
              - service: climate.set_hvac_mode
                target:
                  entity_id: !input smart_thermostat_entity
                data:
                  hvac_mode: cool
              - service: select.select_option
                target:
                  entity_id: "select.{{ w100_name }}_sensor"
                data:
                  option: internal
              - service: number.set_value
                target:
                  entity_id: "number.{{ w100_name }}_external_temperature"
                data:
                  value: >
                    {{ state_attr(fan_entity, 'fan_mode') | int(1) }}
              - service: mqtt.publish
                data:
                  topic: zigbee2mqtt/{{ w100_name }}/set
                  payload: >
                    {"external_temperature": {{ state_attr(fan_entity, "fan_mode") | int(1) }}}

      # W100 Increase Temp/Fan Speed
      - conditions:
          - condition: trigger
            id: w100_plus
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    state: heat
                sequence:
                  - variables:
                      current_temp: "{{ state_attr(smart_entity, 'temperature') | int }}"
                      max_temp: "{{ state_attr(smart_entity, 'max_temp') | int }}"
                      new_temp: "{{ [current_temp + 1, max_temp] | min }}"
                  - service: climate.set_temperature
                    target:
                      entity_id: !input smart_thermostat_entity
                    data:
                      temperature: "{{ new_temp }}"
                  - service: select.select_option
                    target:
                      entity_id: "select.{{ w100_name }}_sensor"
                    data:
                      option: external
                  - service: number.set_value
                    target:
                      entity_id: "number.{{ w100_name }}_external_temperature"
                    data:
                      value: "{{ new_temp }}"
                  - service: mqtt.publish
                    data:
                      topic: zigbee2mqtt/{{ w100_name }}/set
                      payload: >
                        {"external_temperature": {{ new_temp }}}
              - conditions:
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    state: cool
                sequence:
                  - variables:
                      current_fan: "{{ state_attr(fan_entity, 'fan_mode') | int(1) }}"
                      new_fan: "{{ [current_fan + 1, 9] | min }}"
                  - service: climate.set_fan_mode
                    target:
                      entity_id: !input fan_climate_entity
                    data:
                      fan_mode: "{{ new_fan | string }}"
                  - service: select.select_option
                    target:
                      entity_id: "select.{{ w100_name }}_sensor"
                    data:
                      option: internal
                  - service: number.set_value
                    target:
                      entity_id: "number.{{ w100_name }}_external_temperature"
                    data:
                      value: "{{ new_fan }}"
                  - service: mqtt.publish
                    data:
                      topic: zigbee2mqtt/{{ w100_name }}/set
                      payload: >
                        {"external_temperature": {{ new_fan }}}

      # W100 Decrease Temp/Fan Speed
      - conditions:
          - condition: trigger
            id: w100_minus
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    state: heat
                sequence:
                  - variables:
                      current_temp: "{{ state_attr(smart_entity, 'temperature') | int }}"
                      min_temp: "{{ state_attr(smart_entity, 'min_temp') | int }}"
                      new_temp: "{{ [current_temp - 1, min_temp] | max }}"
                  - service: climate.set_temperature
                    target:
                      entity_id: !input smart_thermostat_entity
                    data:
                      temperature: "{{ new_temp }}"
                  - service: select.select_option
                    target:
                      entity_id: "select.{{ w100_name }}_sensor"
                    data:
                      option: external
                  - service: number.set_value
                    target:
                      entity_id: "number.{{ w100_name }}_external_temperature"
                    data:
                      value: "{{ new_temp }}"
                  - service: mqtt.publish
                    data:
                      topic: zigbee2mqtt/{{ w100_name }}/set
                      payload: >
                        {"external_temperature": {{ new_temp }}}
              - conditions:
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    state: cool
                sequence:
                  - variables:
                      current_fan: "{{ state_attr(fan_entity, 'fan_mode') | int(1) }}"
                      new_fan: "{{ [current_fan - 1, 1] | max }}"
                  - service: climate.set_fan_mode
                    target:
                      entity_id: !input fan_climate_entity
                    data:
                      fan_mode: "{{ new_fan | string }}"
                  - service: select.select_option
                    target:
                      entity_id: "select.{{ w100_name }}_sensor"
                    data:
                      option: internal
                  - service: number.set_value
                    target:
                      entity_id: "number.{{ w100_name }}_external_temperature"
                    data:
                      value: "{{ new_fan }}"
                  - service: mqtt.publish
                    data:
                      topic: zigbee2mqtt/{{ w100_name }}/set
                      payload: >
                        {"external_temperature": {{ new_fan }}}

      # W100 Sync Display Values
      - conditions:
          - condition: trigger
            id: w100_sync
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    state: heat
                sequence:
                  - service: select.select_option
                    target:
                      entity_id: "select.{{ w100_name }}_sensor"
                    data:
                      option: external
                  - service: number.set_value
                    target:
                      entity_id: "number.{{ w100_name }}_external_temperature"
                    data:
                      value: "{{ state_attr(smart_entity, 'temperature') | round(0) }}"
                  - service: mqtt.publish
                    data:
                      topic: zigbee2mqtt/{{ w100_name }}/set
                      payload: >
                        {"external_temperature": {{ state_attr(smart_entity, "temperature") | round(0) }}}
              - conditions:
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    state: cool
                sequence:
                  - service: select.select_option
                    target:
                      entity_id: "select.{{ w100_name }}_sensor"
                    data:
                      option: internal
                  - service: number.set_value
                    target:
                      entity_id: "number.{{ w100_name }}_external_temperature"
                    data:
                      value: >
                        {{ state_attr(fan_entity, 'fan_mode') | int(1) }}
                  - service: mqtt.publish
                    data:
                      topic: zigbee2mqtt/{{ w100_name }}/set
                      payload: >
                        {"external_temperature": {{ state_attr(fan_entity, "fan_mode") | int(1) }}}
            default:
              - service: select.select_option
                target:
                  entity_id: "select.{{ w100_name }}_sensor"
                data:
                  option: internal

      # W100 Initialize Display on Startup
      - conditions:
          - condition: trigger
            id: w100_init
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input smart_thermostat_entity
                    state: heat
                sequence:
                  - service: select.select_option
                    target:
                      entity_id: "select.{{ w100_name }}_sensor"
                    data:
                      option: external
                  - service: number.set_value
                    target:
                      entity_id: "number.{{ w100_name }}_external_temperature"
                    data:
                      value: "{{ state_attr(smart_entity, 'temperature') | round(0) }}"
                  - service: mqtt.publish
                    data:
                      topic: zigbee2mqtt/{{ w100_name }}/set
                      payload: >
                        {"external_temperature": {{ state_attr(smart_entity, "temperature") | round(0) }}}
            default:
              - service: select.select_option
                target:
                  entity_id: "select.{{ w100_name }}_sensor"
                data:
                  option: internal
              - service: number.set_value
                target:
                  entity_id: "number.{{ w100_name }}_external_temperature"
                data:
                  value: >
                    {{ state_attr(fan_entity, 'fan_mode') | int(1) }}
              - service: mqtt.publish
                data:
                  topic: zigbee2mqtt/{{ w100_name }}/set
                  payload: >
                    {"external_temperature": {{ state_attr(fan_entity, "fan_mode") | int(1) }}}
          - service: number.set_value
            target:
              entity_id: "number.{{ w100_name }}_external_humidity"
            data:
              value: >
                {% if backup_humidity_entity %}
                  {{ states(backup_humidity_entity) | round(0) }}
                {% else %}
                  50
                {% endif %}
          - service: mqtt.publish
            data:
              topic: zigbee2mqtt/{{ w100_name }}/set
              payload: >
                {"external_humidity": {% if backup_humidity_entity %}{{ states(backup_humidity_entity) | round(0) }}{% else %}50{% endif %}}

      # W100 Sync Humidity Display
      - conditions:
          - condition: trigger
            id: w100_humidity
        sequence:
          - service: number.set_value
            target:
              entity_id: "number.{{ w100_name }}_external_humidity"
            data:
              value: "{{ states(humidity_entity) | round(0) }}"
          - service: mqtt.publish
            data:
              topic: zigbee2mqtt/{{ w100_name }}/set
              payload: '{"external_humidity": {{ states(humidity_entity) | round(0) }}}'
      
      # Fan Temperature Monitor - Workaround for stuck heater
      - conditions:
          - condition: trigger
            id: fan_temp_monitor
          - condition: state
            entity_id: !input smart_thermostat_entity
            state: heat
          # Prevent running if we just ran the workaround
          - condition: template
            value_template: >
              {% set last_changed = states.automation[context.this.entity_id].last_triggered %}
              {{ last_changed is none or (now() - last_changed).total_seconds() > 300 }}
          - condition: template
            value_template: >
              {% set fan_temp = state_attr(fan_entity, 'current_temperature') | float(0) %}
              {% set room_temp = state_attr(smart_entity, 'current_temperature') | float(0) %}
              {% set fan_setpoint = state_attr(fan_entity, 'temperature') | float(0) %}
              {{ fan_temp >= 29.5 and fan_temp >= (fan_setpoint - 0.5) and room_temp < 29 and (fan_temp - room_temp) > 2 }}
        sequence:
          - service: system_log.write
            data:
              message: >
                Blueprint Debug: Fan temp monitor triggered. 
                Fan temp: {{ state_attr(fan_entity, 'current_temperature') }}°C, 
                Room temp: {{ state_attr(smart_entity, 'current_temperature') }}°C.
                Fan thinks it reached setpoint but room is cooler. Forcing air circulation.
              level: warning
          - service: climate.set_hvac_mode
            target:
              entity_id: !input smart_thermostat_entity
            data:
              hvac_mode: "off"
          - delay:
              seconds: 5
          - service: climate.set_hvac_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              hvac_mode: fan_only
          - service: climate.set_fan_mode
            target:
              entity_id: !input fan_climate_entity
            data:
              fan_mode: "6"
          - delay:
              minutes: 2
          - service: climate.set_hvac_mode
            target:
              entity_id: !input smart_thermostat_entity
            data:
              hvac_mode: heat
          - service: system_log.write
            data:
              message: "Blueprint Debug: Air circulation complete. Resuming normal heating."
              level: warning